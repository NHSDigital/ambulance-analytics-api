openapi: 3.0.0
info:
  version: v1.0.98-alpha
  title: Ambulance Analytics - FHIR API
  description: |
    ## Overview
    Use this API to submit ambulance call centre data to the national electronic database. This data is stored by the Data Processing Service (DPS) for analysis and review by NHS England and local ambulance trusts.
    
    You can:
      - post ambulance response records individually or in batches
    
    You cannot:
      - read any of the records stored in DPS
      
    This API can only be accessed system to system using unattended access.  This API cannot be used by healthcare professionals or citizens.
    
    ## Legal Use
    This API can only be used where there is a legal basis to do so. Make sure you have a valid use case before you go too far with your development. You must do this before you can go live (see ‘Onboarding’ below).
    
    ## Related APIs
    The [Messaging Exchange for Social care and Health (MESH)](https://meshapi.docs.apiary.io/#) API will also be required for delivering messages and files to registered recipients.
    
    ## API status and roadmap
    This API is in [beta](https://digital.nhs.uk/developer/guides-and-documentation/reference-guide#api-status), meaning:
     * we might make breaking changes, but only if we can't avoid it, and we'll give advance notice
     * we can't guarantee availability or performance

    This API is currently available for sandbox testing, integration testing and production use. However, availability is currently limited to a small number of ambulance trusts in England.
    
    To see our roadmap, or to suggest, comment or vote on features for this API, see our [interactive product backlog](https://nhs-digital-api-management.featureupvote.com/?order=popular&filter=allexceptdone&tag=ambulance-analytics&deleted=0#controls).
    
    If you have any other queries, please [contact us](https://digital.nhs.uk/developer/help-and-support).
    
    ## Technology
    This API is [RESTful](https://digital.nhs.uk/developer/guides-and-documentation/api-technologies-at-nhs-digital#basic-rest).
    
    It also conforms to the [FHIR](https://digital.nhs.uk/developer/guides-and-documentation/api-technologies-at-nhs-digital#fhir)
    global standard for health care data exchange. Specifically, it is aligned with [FHIR UK Core](https://digital.nhs.uk/services/fhir-uk-core),
    which is built on FHIR Release 4. Read the specification for the [message payload](https://simplifier.net/guide/FHIRImplementationGuideTemplateambulance/Overview).
    
    ## Network access
    This API is available on the internet. For more details, see [Network access for APIs](https://digital.nhs.uk/developer/guides-and-documentation/network-access-for-apis).
    
    ## Security and authorisation
    ### Authentication
    
    This API follows the OAuth 2.0 protocol, the authentication method (unattended access) is designed for authentication without a user being present. You can authenticate by sending a JSON Web Token (JWT) token signed with a private key with the RS512 algorithm.
    
    ### Authorisation
    Once the target server receives the JWT token it will lookup for a set of public keys from either a URL or store. The target server will then check each public key until it finds one that matches.
    
    The current flow to use this API is:
    - POST request with a signed JWT token and other required headers to the /token endpoint
    - POST request with the access token in the Authorisation header to the /submission endpoint
    
    ### Generate a Private/Public Key Pair
    Run the following commands on the command prompt to generate a private/public key pair on a UNIX system (Linux, MacOS):
    
        ssh-keygen -t rsa -b 4096 -m PEM -f jwtRS512.key
        openssl rsa -in jwtRS512.key -pubout -outform PEM -out jwtRS512.key.pub
    The resulting files, jwtRS512.key and jwtRS512.key.pub are the private and public keys, respectively.
    
    Create a Key Identifier (KID), a unique name to identify the key pair in use. This KID will be used to refer to the key pair when constructing and posting the JWT.
    
    ### Register a Public Key with API Management
    Email [API Management](mailto://api.management@nhs.net) with your **KID** and your **public key** as an attachment. The unattended access public key management process is currently not self-service, however we do aim to provide this in the future as part of our [product roadmap](https://nhs-digital-api-management.featureupvote.com/suggestions/107454/application-registration-selfservice).
    
    Your public key will be associated with your test app in the environment of your choice. You will receive an email once this has been completed successfully. Now use your KID and private key to sign your JWT requests.
    
    ### Generate a JWT and sign it
    A JWT is a token that consists of three parts: a header, a payload and a signature. The header details the algorithm and token type. The payload consists of data (detailed below) and the signature is used to verify the token itself. More details on [generating a JWT Token](https://jwt.io/).
    
    **Note:** We strongly recommend that you use a library to generate your JWT tokens, as this can be a complicated process to perform by hand.
    
    #### Header
    The header for the JWT details the authentication and token type used. The algorithm used is RS512, matching the algorithm used to generate the private/public key pair.
    
    ##### Example:
    	{
    	  "alg": "RS512",
    	  "typ": "JWT",
    	  "kid": "test"
    	}

    | Field | Description                                                                                                                                                                                                                                                                                                 | Type   |
    |-------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|--------|
    | alg   | The algorithm (alg) used to generate the private key used to sign the JWT. In this case, RS512.                                                                                                                                                                                                             | string |
    | typ   | The token type (typ) is JWT.                                                                                                                                                                                                                                                                                | string |
    | kid   | The Key Identifier (kid) used to select the public key to use to verify the signature of the JWT. <br>If a trust has multiple public/private key pairs, this will be used to select the appropriate public key.<br>For testing on the INT environment, we recommend “test” as an appropriate KID value.     | string |
    
    #### Payload
    The payload consists of the following mandatory claims encoded as a JSON structure:
    
    ##### Example:
    	{
    	  "Iss": "<test-app-api-key>",
    	  "Sub": "<test-app-api-key>",
    	  "Aud": "https://int.api.service.nhs.uk/ambulance-analytics/token",
    	  "Jti": "<unique-per-request-id>",
    	  "Exp": <current-time-plus-5mins-from-jwt-creation>
    	}

    | Field | Description                                                                                                                                                                                                            | Type   | Notes                                                                                                                                                                                       |
    |-------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|--------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
    | iss   | The issuer claim (iss) should be<br> set to the test app API key.                                                                                                                                                      | string |                                                                                                                                                                                             |
    | sub   | The subject claim (sub) should be set <br>to the test app API key.                                                                                                                                                     | string |                                                                                                                                                                                             |
    | aud   | The audience claim (aud) should be set to <br>[INT environment](https://int.api.service.nhs.uk/ambulance-analytics/token) and [PROD environment](https://api.service.nhs.uk/ambulance-analytics/token) URLs.           | string | This URL will be different for the production environment, <br>so make sure this can be changed easily when deploying client<br> softwares to access different API Management environments. |
    | jti   | A unique JWT identifier (jti), which can be <br>used to prevent reuse of the JWT. <br>These JWTs **must** only be used once. <br>This can take the form <br>of a unique integer or GUID.                               | string |                                                                                                                                                                                             |
    | exp   | Expiration time (exp) on or after which the <br>ID Token **will not** be accepted for processing. <br>The only acceptable time range is <br>5 minutes from token created time.                                         | number | Exp is a Numeric Time value, which is defined as the <br>number of seconds (not milliseconds) since epoch (e.g. A UNIX timestamp).                                                              |
    
    #### The Signature
    The signature consists of the private key signed contents of the header and payload.
    
    #### Assemble the JWT
    The JWT consists of the base64 encoded header (separated by a period), the base64 encoded payload (separated by a period), followed by the base64 encoded signature.
    
    For more details see [generating a JWT Token](https://jwt.io/).
    
     
    ### Submit the access token request
    The access token request consists of a Hypertext Transfer Protocol Secure (HTTPS) request to the following endpoint, along with the x-www-form-urlencoded body consisting of four fields:
    
         POST /ambulance-analytics/token HTTP/1.1
         Host: int.api.service.nhs.uk
         Content-Type: application/x-www-form-urlencoded
         client_id=<test-app-api-key>&client_assertion_type=urn:ietf:params:oauth:client-assertion-type:jwt-bearer&client_assertion=<jwt_token>&grant_type=client_credentials
    
    The response consists of a JSON structure, the most important aspect being the “access_token” key. To submit the data into DPS, use this OAuth 2.0 access token in subsequent requests to the /submission endpoint. The request fields are detailed below.
    
     
    | Field                 | Description                                                                      | Type   |
    | --------------------- | -------------------------------------------------------------------------------- | -------|
    | client_id             | The client identifier should be set to the test app API key.                     | String |
    | client_assertion_type | This must be the value “urn:ietf:params:oauth:client-assertion-type:jwt-bearer”. | String |
    | client_assertion      | This must be set to the value of the generated JWT token.                        | String |
    | grant_type            | This must be the value “client_credentials”.                                     | String |
    
    ### Using the access token to submit data into DPS
    Once you have received the ”access_token”, you can make data submissions to DPS via POST request to the /submission endpoint, with the authorisation header set to bearer and the access token.
    
    ## Environments and testing
    | Purpose          | URL                                                       |
    | ---------------- | --------------------------------------------------------- |
    | Sandbox          | `https://sandbox.api.service.nhs.uk/ambulance-analytics`  |
    | Integration test | `https://int.api.service.nhs.uk/ambulance-analytics`      |
    | Production       | `https://api.service.nhs.uk/ambulance-analytics`          |
    
    ### Sandbox testing
    Our [sandbox environment](https://digital.nhs.uk/developer/guides-and-documentation/testing#sandbox-testing):
    - is for early developer testing
    - only covers a limited set of scenarios
    - is stateless, so it does not actually persist any updates
    - is open access, so does not allow you to test authorisation
    
    For more details on sandbox testing, or to try out the sandbox using our "Try this API" feature.
    
    ### Integration testing
    Our [integration test environment](https://digital.nhs.uk/developer/guides-and-documentation/testing#integration-testing):
    - is for formal integration testing
    - is stateful, so persists updates
    - includes authorisation with either a username/password or smartcard/PIN
    
    For more details see [integration testing with our RESTful APIs](https://digital.nhs.uk/developer/guides-and-documentation/testing#integration-testing-with-our-restful-apis).
    
    ## Onboarding
    
    You need to get your software approved by us before it can go live with this API. We call this onboarding. The onboarding process can sometimes be quite long, so it’s worth planning well ahead. To onboard for this API:
    
     - create an account on the API Management Developer Portal in the INT Environment, for testing purposes 
     - create a test app in your Developer Portal account in the INT Environment, as the API Key will be needed to authenticate
     - generate a private/public key pair for your test app
     - submit the public key to API Management Support and confirm this has been associated successfully with the test app
  contact:
    name: API Management Support
    email: api.management@nhs.net
servers:
  - url: 'https://sandbox.api.service.nhs.uk/ambulance-analytics'
    description: Sandbox environment.
tags:
  - name: Ambulance Analytics Api
paths:
  /submission:
    post:
      summary: Post Ambulance Analytics data
      operationId: postData
      description: |
        Use this endpoint to post data into DPS, successful calls will return 200 with an empty JSON body. This endpoint does not validate the posted payload, it will only acknowledge receipt of the payload. See the overview page to understand how this API works in more detail.
      responses:
        '200':
          description: Successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: dataset-id
              examples:
                example:
                  value:
                    id: 6eeec54e-3d39-4bc4-a1d9-57615d258fpq
      tags:
        - Post ambulance data
      parameters: []
    parameters: []
components:
  schemas: {}
  securitySchemes: {}
