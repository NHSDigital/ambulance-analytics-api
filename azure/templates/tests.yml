parameters:
    - name: environment
    - name: service_name
    - name: base_url

steps:
    - template: "azure/components/aws-assume-role.yml@common"
      parameters:
        role: "auto-ops"
        profile: "apm_ptl"

    - template: "azure/components/get-aws-secrets-and-ssm-params.yml@common"
      parameters:
          secret_ids:
              - ptl/azure-devops/${{ parameters.service_name }}/${{ parameters.environment }}/JWT_RS256_PRIVATE_KEY
              - ptl/azure-devops/${{ parameters.service_name }}/${{ parameters.environment }}/CLIENT_ID
              - ptl/azure-devops/${{ parameters.service_name }}/${{ parameters.environment }}/JWT_RS512_PRIVATE_KEY
          config_ids: []
          secret_file_ids:
              - ptl/app-credentials/jwt_testing/non-prod/JWT_TESTING_PRIVATE_KEY

    - bash: |
          if [ -d $(Pipeline.Workspace)/s/$(SERVICE_NAME)/$(SERVICE_ARTIFACT_NAME)/tests ]; then
              test_dir="$(Pipeline.Workspace)/s/$(SERVICE_NAME)/$(SERVICE_ARTIFACT_NAME)/tests/e2e"

              export BASE_URL="${{ parameters.base_url }}"
              export ROOT_PATH="$(SERVICE_BASE_PATH)"
              export CLIENT_ID="$(CLIENT_ID)"

              if [ "${{ parameters.environment }}" = "prod" ]; then
                export TOKEN_URL=https://api.service.nhs.uk/oauth2/token
              else
                export TOKEN_URL=https://${{ parameters.environment }}.api.service.nhs.uk/oauth2/token
              fi
              if [ "${{ parameters.environment }}" = "int" ]; then
                export JWT_RS512_PRIVATE_KEY=$(echo "$(JWT_RS512_PRIVATE_KEY)" | base64 -d | sed -z 's/\n/\\n/g')
                echo here1
              else
                #export JWT_RS512_PRIVATE_KEY="$(tr -d '\n' < $(Pipeline.Workspace)/secrets/$(JWT_TESTING_PRIVATE_KEY))"
                export JWT_RS512_PRIVATE_KEY=$(echo "$(cat (Pipeline.Workspace)/secrets/$(JWT_TESTING_PRIVATE_KEY))" | sed -z 's/\n/\\n/ g')
                echo $JWT_RS512_PRIVATE_KEY
                echo $CLIENT_ID
              fi

              envsubst < $test_dir/environments/internal-dev.postman.json > $test_dir/environments/prefilled.internal-dev.postman.json

              docker run -v ${test_dir}:/etc/newman postman/newman run ambulance_analytics.json --environment /etc/newman/environments/prefilled.internal-dev.postman.json --reporters=cli,junit
          fi
      displayName: 'Run Postman tests'

    - task: PublishTestResults@2
      displayName: 'Publish Test Results'
      inputs:
          testResultsFiles: |
              $(Pipeline.Workspace)/s/$(SERVICE_NAME)/$(SERVICE_ARTIFACT_NAME)/tests/e2e/newman/*.xml
          failTaskOnFailedTests: true
